[머신러닝]
* 기존 데이터 이용 -> 발생하지 않은 미지의 일 예측

학습 - 데이터가 입력되고 패턴이 분석죄는 과정

[환경준비]
딥러닝을 구종하는 데 필요한 라이브러리 호출
라이브러리 - 특정한 기능이 담긴 작을 프로그램들을 모아 놓은 것
-> 호출시 명령어 import 사용

from (라이브러리) import (함수명)
ex) from tensorflow.keras.models import Sequentail
-> 텐서플로의 케라스라는 API에 있는 모델 클래스로 부터 Sequential() 함수를 불러와라

*필요한 모듈만 부를 때
-> from (라이브러리명) import (함수명)
(생략) import (라이브러리명) as (새 이름)

[데이터 준비]
* 데이터를 불러와 사용할 수 있도록 준비

클래스(class) - 정답에 해당하는 항목 = 이름표
속성(attribute) - 정답 전까지의 항목
-> attribute와 class를 서로 다른 데이터 셋으로 지정해야함

*데이터 셋
-> 데이터 모음

[구조 결정]
*텐서플로 -> 구글에서 만든 딥러닝 전용 라이브러리
장점 - 多 딥러닝 작업 간으
단점 - 사용법 Diffidult
       -> 해결 : 케라스(keras)

텐서플로 = 비행기
케라스 = 파일럿

케라스의 Sequential()함수 - model.add()함수를 이용해 내부의 층 제작(팔요한 만큼)
model.add()함수 안에 케라스 API의 layers클래스에서 물러온 Dense()함수 포함
(Dense -  각 층의 입력과 출력을 촘촘하게 모두 연결하라)

[모델 실행]
*model.compile()
-> 앞서 만든 model 설정 그대로 실행
(내부에 loss, optimizer, metrics 등 키워드 포함

*model.fir()
-> 한 번 오갈 때 사용할 데이터 갯수 선택
